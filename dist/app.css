/*

github.com style (c) Vasily Polovnyov <vast@whiteants.net>

*/

.hljs {
  display: block;
  overflow-x: auto;
  padding: 0.5em;
  color: #333;
  background: #f8f8f8;
}

.hljs-comment,
.hljs-quote {
  color: #998;
  font-style: italic;
}

.hljs-keyword,
.hljs-selector-tag,
.hljs-subst {
  color: #333;
  font-weight: bold;
}

.hljs-number,
.hljs-literal,
.hljs-variable,
.hljs-template-variable,
.hljs-tag .hljs-attr {
  color: #008080;
}

.hljs-string,
.hljs-doctag {
  color: #d14;
}

.hljs-title,
.hljs-section,
.hljs-selector-id {
  color: #900;
  font-weight: bold;
}

.hljs-subst {
  font-weight: normal;
}

.hljs-type,
.hljs-class .hljs-title {
  color: #458;
  font-weight: bold;
}

.hljs-tag,
.hljs-name,
.hljs-attribute {
  color: #000080;
  font-weight: normal;
}

.hljs-regexp,
.hljs-link {
  color: #009926;
}

.hljs-symbol,
.hljs-bullet {
  color: #990073;
}

.hljs-built_in,
.hljs-builtin-name {
  color: #0086b3;
}

.hljs-meta {
  color: #999;
  font-weight: bold;
}

.hljs-deletion {
  background: #fdd;
}

.hljs-addition {
  background: #dfd;
}

.hljs-emphasis {
  font-style: italic;
}

.hljs-strong {
  font-weight: bold;
}
html {
  height: 100%;
  min-height: 100%;
}

body {
  height: 100%;
  margin: 0;
  padding: 0;
  font-family: 'Source Sans Pro', 'Helvetica Neue', Arial, sans-serif;
  font-size: 14px;
  -webkit-font-smoothing: antialiased;
  line-height: 1.4;
  color: #666666;
  background-color: #ffffff;
}

.app {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: stretch;
  align-content: stretch;
  width: 100%;
  min-width: 600px;
  max-width: 900px;
  height: 100%;
  margin: 0 auto;
  overflow: hidden;
}

.app .header {
  flex: 0 0 80px;
  background-color: #ffffff;
  text-align: center;
  padding: 15px 0 15px 0;
  transition: flex .3s;
}

.app .header .logo {
  font-size: 40px;
  font-weight: bold;
  transition: font-size .3s;
}

.app .header .logo img {
  height: 60px;
  transition: height .3s;
}

.app .header .tagline {
  margin: 0 auto;
  text-align: center;
  font-size: 14px;
  opacity: 0;
  transition: font-size .3s, opacity .3s;
}

.app .header.large {
  flex: 0 0 150px;
}

.app .header.large .logo {
  font-size: 80px;
}

.app .header.large .logo img {
  height: 100px;
}

.app .header.large .tagline {
  font-size: 18px;
  opacity: 1;
}

.app .container {
  flex: 1 1 auto;
  min-height: 0;
  /* weird browser fix */
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: stretch;
  align-content: stretch;
}

.app .container .sidebar {
  flex: 0 1 180px;
  overflow-x: hidden;
  overflow-y: auto;
  border-right: solid 1px #DCDEE2;
  padding: 0 0 0 15px;
}

.app .container .sidebar .links a {
  display: list-item;
  text-decoration: none;
  list-style: none;
  color: #666666;
  font-size: 16px;
  font-weight: normal;
  transition: transform .3s;
  margin: 0 0 8px 0;
}

.app .container .sidebar .links a.active,
.app .container .sidebar .links a:hover {
  color: #42b983;
  font-weight: bold;
}

.app .container .sidebar .links a:hover {
  transform: translateX(10px);
}

.app .container .main {
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: calc(100% - 180px);
  min-height: 0;
  /* weird browser fix */
  overflow-x: hidden;
  overflow-y: auto;
  padding: 0 15px 15px 15px;
}

.fade-enter-active,
.fade-leave-active {
  transition: opacity .3s ease-in-out;
}

.fade-enter,
.fade-leave-to {
  opacity: 0;
}

a {
  color: #42b983;
  font-weight: 600;
  text-decoration: none;
}

a:hover {
  color: #276e4e;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  padding: 8px 0 8px 0;
  margin: 0;
  border-bottom: solid 1px #DCDEE2;
}

pre {
  margin: 0;
}

.hljs {
  padding: 0;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */