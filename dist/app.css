/*

github.com style (c) Vasily Polovnyov <vast@whiteants.net>

*/

.hljs {
  display: block;
  overflow-x: auto;
  padding: 0.5em;
  color: #333;
  background: #f8f8f8;
}

.hljs-comment,
.hljs-quote {
  color: #998;
  font-style: italic;
}

.hljs-keyword,
.hljs-selector-tag,
.hljs-subst {
  color: #333;
  font-weight: bold;
}

.hljs-number,
.hljs-literal,
.hljs-variable,
.hljs-template-variable,
.hljs-tag .hljs-attr {
  color: #008080;
}

.hljs-string,
.hljs-doctag {
  color: #d14;
}

.hljs-title,
.hljs-section,
.hljs-selector-id {
  color: #900;
  font-weight: bold;
}

.hljs-subst {
  font-weight: normal;
}

.hljs-type,
.hljs-class .hljs-title {
  color: #458;
  font-weight: bold;
}

.hljs-tag,
.hljs-name,
.hljs-attribute {
  color: #000080;
  font-weight: normal;
}

.hljs-regexp,
.hljs-link {
  color: #009926;
}

.hljs-symbol,
.hljs-bullet {
  color: #990073;
}

.hljs-built_in,
.hljs-builtin-name {
  color: #0086b3;
}

.hljs-meta {
  color: #999;
  font-weight: bold;
}

.hljs-deletion {
  background: #fdd;
}

.hljs-addition {
  background: #dfd;
}

.hljs-emphasis {
  font-style: italic;
}

.hljs-strong {
  font-weight: bold;
}
html {
  height: 100%;
  min-height: 100%;
}

body {
  height: 100%;
  margin: 0;
  padding: 0;
  font-family: 'Source Sans Pro', 'Helvetica Neue', Arial, sans-serif;
  font-size: 14px;
  -webkit-font-smoothing: antialiased;
  line-height: 1.4;
  color: #666666;
  background-color: #ffffff;
}

.app {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: stretch;
  align-content: stretch;
  width: 100%;
  min-width: 600px;
  max-width: 900px;
  height: 100%;
  margin: 0 auto;
}

.app .header {
  flex: 0 0 80px;
  background-color: #ffffff;
  text-align: center;
  padding: 15px 0 15px 0;
  transition: flex .3s;
}

.app .header .logo {
  font-size: 40px;
  font-weight: bold;
  transition: font-size .3s;
}

.app .header .logo img {
  height: 60px;
  transition: height .3s;
}

.app .header .tagline {
  margin: 0 auto;
  text-align: center;
  font-size: 14px;
  opacity: 0;
  transition: font-size .3s, opacity .3s;
}

.app .header.large {
  flex: 0 0 150px;
}

.app .header.large .logo {
  font-size: 80px;
}

.app .header.large .logo img {
  height: 100px;
}

.app .header.large .tagline {
  font-size: 18px;
  opacity: 1;
}

.app .container {
  flex: 1 1 auto;
  min-height: 0;
  /* weird browser fix */
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: stretch;
  align-content: stretch;
}

.app .container .sidebar {
  flex: 0 1 180px;
  overflow-x: hidden;
  overflow-y: auto;
  border-right: solid 1px #DCDEE2;
  padding: 0 0 0 15px;
}

.app .container .sidebar .links a {
  display: list-item;
  text-decoration: none;
  list-style: none;
  color: #666666;
  font-size: 16px;
  font-weight: normal;
  transition: transform .3s;
  margin: 0 0 8px 0;
}

.app .container .sidebar .links a.active,
.app .container .sidebar .links a:hover {
  color: #42b983;
  font-weight: bold;
}

.app .container .sidebar .links a:hover {
  transform: translateX(10px);
}

.app .container .main {
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: calc(100% - 180px);
  min-height: 0;
  /* weird browser fix */
  padding: 0 15px 15px 15px;
  overflow: auto;
}

.fade-enter-active,
.fade-leave-active {
  transition: opacity .3s ease-in-out;
}

.fade-enter,
.fade-leave-to {
  opacity: 0;
}

a {
  color: #42b983;
  font-weight: 600;
  text-decoration: none;
}

a:hover {
  color: #276e4e;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  padding: 8px 0 8px 0;
  margin: 0;
  border-bottom: solid 1px #DCDEE2;
}

pre {
  margin: 0;
}

.hljs {
  padding: 0;
}

/*!
 * baguetteBox.js
 * @author  feimosi
 * @version %%INJECT_VERSION%%
 * @url https://github.com/feimosi/baguetteBox.js
 */

#baguetteBox-overlay {
  display: none;
  opacity: 0;
  position: fixed;
  overflow: hidden;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1000000;
  background-color: #222;
  background-color: rgba(0, 0, 0, 0.8);
  transition: opacity .5s ease;
}

#baguetteBox-overlay.visible {
  opacity: 1;
}

#baguetteBox-overlay .full-image {
  display: inline-block;
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
}

#baguetteBox-overlay .full-image figure {
  display: inline;
  margin: 0;
  height: 100%;
}

#baguetteBox-overlay .full-image img {
  display: inline-block;
  width: auto;
  height: auto;
  max-height: 100%;
  max-width: 100%;
  vertical-align: middle;
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.6);
}

#baguetteBox-overlay .full-image figcaption {
  display: block;
  position: absolute;
  bottom: 0;
  width: 100%;
  text-align: center;
  line-height: 1.8;
  white-space: normal;
  color: #ccc;
  background-color: #000;
  background-color: rgba(0, 0, 0, 0.6);
  font-family: sans-serif;
}

#baguetteBox-overlay .full-image:before {
  content: "";
  display: inline-block;
  height: 50%;
  width: 1px;
  margin-right: -1px;
}

#baguetteBox-slider {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  white-space: nowrap;
  transition: left .4s ease, transform .4s ease;
}

#baguetteBox-slider.bounce-from-right {
  animation: bounceFromRight .4s ease-out;
}

#baguetteBox-slider.bounce-from-left {
  animation: bounceFromLeft .4s ease-out;
}

@keyframes bounceFromRight {
  0% {
    margin-left: 0;
  }

  50% {
    margin-left: -30px;
  }

  100% {
    margin-left: 0;
  }
}

@keyframes bounceFromLeft {
  0% {
    margin-left: 0;
  }

  50% {
    margin-left: 30px;
  }

  100% {
    margin-left: 0;
  }
}

.baguetteBox-button#next-button,
.baguetteBox-button#previous-button {
  top: 50%;
  top: calc(50% - 30px);
  width: 44px;
  height: 60px;
}

.baguetteBox-button {
  position: absolute;
  cursor: pointer;
  outline: none;
  padding: 0;
  margin: 0;
  border: 0;
  border-radius: 15%;
  background-color: #323232;
  background-color: rgba(50, 50, 50, 0.5);
  color: #ddd;
  font: 1.6em sans-serif;
  transition: background-color .4s ease;
}

.baguetteBox-button:focus,
.baguetteBox-button:hover {
  background-color: rgba(50, 50, 50, 0.9);
}

.baguetteBox-button#next-button {
  right: 2%;
}

.baguetteBox-button#previous-button {
  left: 2%;
}

.baguetteBox-button#close-button {
  top: 20px;
  right: 2%;
  right: calc(2% + 6px);
  width: 30px;
  height: 30px;
}

.baguetteBox-button svg {
  position: absolute;
  left: 0;
  top: 0;
}

/*
    Preloader
    Borrowed from http://tobiasahlin.com/spinkit/
*/

.baguetteBox-spinner {
  width: 40px;
  height: 40px;
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -20px;
  margin-left: -20px;
}

.baguetteBox-double-bounce1,
.baguetteBox-double-bounce2 {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: #fff;
  opacity: .6;
  position: absolute;
  top: 0;
  left: 0;
  animation: bounce 2s infinite ease-in-out;
}

.baguetteBox-double-bounce2 {
  animation-delay: -1s;
}

@keyframes bounce {
  0%, 100% {
    transform: scale(0);
  }

  50% {
    transform: scale(1);
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL3Zhci93d3cvaHRtbC92dWUtYnVpbGQtZG9jcy9zcmMvYXNzZXRzL2Nzcy9hcHAuc2NzcyIsInNvdXJjZXMiOlsiL3Zhci93d3cvaHRtbC92dWUtYnVpbGQtZG9jcy9zcmMvYXNzZXRzL2Nzcy9hcHAuc2NzcyIsIi92YXIvd3d3L2h0bWwvdnVlLWJ1aWxkLWRvY3Mvc3JjL2Fzc2V0cy9jc3MvX3ZhcmlhYmxlcy5zY3NzIiwiL3Zhci93d3cvaHRtbC92dWUtYnVpbGQtZG9jcy9zcmMvYXNzZXRzL2Nzcy9sYXlvdXQuc2NzcyIsIi92YXIvd3d3L2h0bWwvdnVlLWJ1aWxkLWRvY3Mvc3JjL2Fzc2V0cy9jc3MvYW5pbWF0aW9ucy5zY3NzIiwiL3Zhci93d3cvaHRtbC92dWUtYnVpbGQtZG9jcy9zcmMvYXNzZXRzL2Nzcy9taXNjLnNjc3MiLCIvdmFyL3d3dy9odG1sL3Z1ZS1idWlsZC1kb2NzL3NyYy9hc3NldHMvY3NzL2hpZ2hsaWdodHMuc2NzcyIsIi92YXIvd3d3L2h0bWwvdnVlLWJ1aWxkLWRvY3Mvbm9kZV9tb2R1bGVzL2JhZ3VldHRlYm94LmpzL3NyYy9iYWd1ZXR0ZUJveC5zY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJfdmFyaWFibGVzXCI7XG5AaW1wb3J0IFwibGF5b3V0XCI7XG5AaW1wb3J0IFwiYW5pbWF0aW9uc1wiO1xuQGltcG9ydCBcIm1pc2NcIjtcbkBpbXBvcnQgXCJoaWdobGlnaHRzXCI7XG5AaW1wb3J0IFwifmJhZ3VldHRlYm94LmpzL3NyYy9iYWd1ZXR0ZUJveC5zY3NzXCJcbiIsIiRwcmltYXJ5OiAjNDJiOTgzO1xuJHNlY29uZGFyeTogIzM1NDk1RTtcbiRmb250LWNvbG9yOiAjNjY2NjY2O1xuJGJvcmRlci1jb2xvcjogI0RDREVFMjtcbiRiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmMWYxO1xuXG4vLyBTdGFuZGFyZCB3aGl0ZS9ibGFja1xuJHdoaXRlOiAjZmZmZmZmO1xuJGJsYWNrOiAjMDAwMDAwO1xuXG4kc2lkZWJhci13aWR0aDogMTgwcHg7XG4iLCIvLyBNYWluIGJvZHkgZWxlbWVudFxuaHRtbCB7aGVpZ2h0OiAxMDAlOyBtaW4taGVpZ2h0OiAxMDAlO31cbmJvZHkge1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbjogMDtcblx0cGFkZGluZzogMDtcbiAgZm9udC1mYW1pbHk6ICdTb3VyY2UgU2FucyBQcm8nLCAnSGVsdmV0aWNhIE5ldWUnLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxNHB4O1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgY29sb3I6ICRmb250LWNvbG9yO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XG59XG5cbi5hcHAge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWl0ZW1zOiBzdHJldGNoO1xuICBhbGlnbi1jb250ZW50OiBzdHJldGNoO1xuICB3aWR0aDogMTAwJTtcbiAgbWluLXdpZHRoOiA2MDBweDtcbiAgbWF4LXdpZHRoOiA5MDBweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXJnaW46IDAgYXV0bztcblxuICAvLyBIZWFkZXIgLSBsb2NhdGVkIGF0IHRoZSB0b3Agb2YgdGhlIGFwbGljYXRpb25cbiAgLmhlYWRlciB7XG4gICAgZmxleDogMCAwIDgwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAxNXB4IDAgMTVweCAwO1xuICAgIHRyYW5zaXRpb246IGZsZXggLjNzO1xuXG4gICAgLmxvZ28ge1xuICAgICAgZm9udC1zaXplOiA0MHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICB0cmFuc2l0aW9uOiBmb250LXNpemUgLjNzO1xuXG4gICAgICBpbWcge1xuICAgICAgICBoZWlnaHQ6IDYwcHg7XG4gICAgICAgIHRyYW5zaXRpb246IGhlaWdodCAuM3M7XG4gICAgICB9XG4gICAgfVxuICAgIC50YWdsaW5lIHtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgb3BhY2l0eTogMDtcbiAgICAgIHRyYW5zaXRpb246IGZvbnQtc2l6ZSAuM3MsIG9wYWNpdHkgLjNzO1xuICAgIH1cblxuICAgIC8vIEFuaW1hdGUgbGFyZ2VyXG4gICAgJi5sYXJnZSB7XG4gICAgICBmbGV4OiAwIDAgMTUwcHg7XG4gICAgICAubG9nbyB7XG4gICAgICAgIGZvbnQtc2l6ZTogODBweDtcbiAgICAgICAgaW1nIHtoZWlnaHQ6IDEwMHB4O31cbiAgICAgIH1cbiAgICAgIC50YWdsaW5lIHtmb250LXNpemU6IDE4cHg7IG9wYWNpdHk6IDE7fVxuICAgIH1cbiAgfVxuXG4gIC5jb250YWluZXIge1xuICAgIGZsZXg6IDEgMSBhdXRvO1xuICAgIG1pbi1oZWlnaHQ6IDA7IC8qIHdlaXJkIGJyb3dzZXIgZml4ICovXG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcbiAgICBhbGlnbi1jb250ZW50OiBzdHJldGNoO1xuXG4gICAgLy8gU2lkZWJhciBpcyB0aGUgcHJpbWFybHkgbGVmdCBoYW5kIGJhclxuICAgIC5zaWRlYmFyIHtcbiAgICAgIGZsZXg6IDAgMSAkc2lkZWJhci13aWR0aDtcbiAgICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgICBib3JkZXItcmlnaHQ6IHNvbGlkIDFweCAkYm9yZGVyLWNvbG9yO1xuICAgICAgcGFkZGluZzogMCAwIDAgMTVweDtcblxuICAgICAgLmxpbmtzIHtcbiAgICAgICAgYSB7XG4gICAgICAgICAgZGlzcGxheTogbGlzdC1pdGVtO1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgICAgIGNvbG9yOiAkZm9udC1jb2xvcjtcbiAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjNzO1xuICAgICAgICAgIG1hcmdpbjogMCAwIDhweCAwO1xuXG4gICAgICAgICAgJi5hY3RpdmUsICY6aG92ZXIge1xuICAgICAgICAgICAgY29sb3I6ICRwcmltYXJ5O1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTBweCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gTWFpbiBpcyB0aGUgbGFyZ2UgbWFpbiBzZWN0aW9uXG4gICAgLm1haW4ge1xuICAgICAgZmxleC1ncm93OiAxO1xuICAgICAgZmxleC1zaHJpbms6IDE7XG4gICAgICBmbGV4LWJhc2lzOiBjYWxjKDEwMCUgLSAjeyRzaWRlYmFyLXdpZHRofSk7XG4gICAgICBtaW4taGVpZ2h0OiAwOyAvKiB3ZWlyZCBicm93c2VyIGZpeCAqL1xuICAgICAgcGFkZGluZzogMCAxNXB4IDE1cHggMTVweDtcbiAgICAgIG92ZXJmbG93OiBhdXRvO1xuICAgIH1cblxuICB9XG59XG4iLCIuZmFkZS1lbnRlci1hY3RpdmUsIC5mYWRlLWxlYXZlLWFjdGl2ZSB7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgLjNzIGVhc2UtaW4tb3V0O1xufVxuLmZhZGUtZW50ZXIsIC5mYWRlLWxlYXZlLXRvIHtcbiAgb3BhY2l0eTogMDtcbn1cbiIsImEge1xuICBjb2xvcjogJHByaW1hcnk7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAmOmhvdmVyIHtcbiAgICBjb2xvcjogZGFya2VuKCRwcmltYXJ5LCAyMCk7XG4gIH1cbn1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG4gIHBhZGRpbmc6IDhweCAwIDhweCAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlci1ib3R0b206IHNvbGlkIDFweCAkYm9yZGVyLWNvbG9yO1xufVxuXG5wcmUge1xuICBtYXJnaW46IDA7XG59XG4iLCJAaW1wb3J0IFwifmhpZ2hsaWdodGpzL3N0eWxlcy9naXRodWIuY3NzXCI7XG5cbi5obGpzIHtcbiAgcGFkZGluZzogMDtcbn1cbiIsIi8qIVxyXG4gKiBiYWd1ZXR0ZUJveC5qc1xyXG4gKiBAYXV0aG9yICBmZWltb3NpXHJcbiAqIEB2ZXJzaW9uICUlSU5KRUNUX1ZFUlNJT04lJVxyXG4gKiBAdXJsIGh0dHBzOi8vZ2l0aHViLmNvbS9mZWltb3NpL2JhZ3VldHRlQm94LmpzXHJcbiAqL1xyXG5cclxuI2JhZ3VldHRlQm94LW92ZXJsYXkge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgei1pbmRleDogMTAwMDAwMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyMjI7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLC44KTtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgLjVzIGVhc2U7XHJcblxyXG4gICAgJi52aXNpYmxlIHtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgfVxyXG5cclxuICAgIC5mdWxsLWltYWdlIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgICAgIGZpZ3VyZSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZTtcclxuICAgICAgICAgICAgbWFyZ2luOiAwOyAgICAgIC8vIG5lZWRlZCBmb3IgbW9iaWxlXHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTsgICAvLyBPcGVyYSAxMiBpbWFnZSBzdHJldGNoaW5nIGZpeFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgLy8gSUU4IGZpeFxyXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcblxyXG4gICAgICAgICAgICBtYXgtaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMCA4cHggcmdiYSgwLDAsMCwuNik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmaWdjYXB0aW9uIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS44O1xyXG4gICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gICAgICAgICAgICBjb2xvcjogI2NjYztcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwuNik7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgIGhlaWdodDogNTAlO1xyXG4gICAgICAgICAgICB3aWR0aDogMXB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6LTFweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbiNiYWd1ZXR0ZUJveC1zbGlkZXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHRvcDogMDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgIHRyYW5zaXRpb246IGxlZnQgLjRzIGVhc2UsIHRyYW5zZm9ybSAuNHMgZWFzZTtcclxuXHJcbiAgICAmLmJvdW5jZS1mcm9tLXJpZ2h0IHtcclxuICAgICAgICBhbmltYXRpb246IGJvdW5jZUZyb21SaWdodCAuNHMgZWFzZS1vdXQ7XHJcbiAgICB9XHJcblxyXG4gICAgJi5ib3VuY2UtZnJvbS1sZWZ0IHtcclxuICAgICAgICBhbmltYXRpb246IGJvdW5jZUZyb21MZWZ0IC40cyBlYXNlLW91dDtcclxuICAgIH1cclxufVxyXG5cclxuQGtleWZyYW1lcyBib3VuY2VGcm9tUmlnaHR7XHJcbiAgICAwJSB7IG1hcmdpbi1sZWZ0OiAwOyB9XHJcbiAgICA1MCUgeyBtYXJnaW4tbGVmdDogLTMwcHg7IH1cclxuICAgIDEwMCUgeyBtYXJnaW4tbGVmdDogMDsgfVxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGJvdW5jZUZyb21MZWZ0e1xyXG4gICAgMCUgeyBtYXJnaW4tbGVmdDogMDsgfVxyXG4gICAgNTAlIHsgbWFyZ2luLWxlZnQ6IDMwcHg7IH1cclxuICAgIDEwMCUgeyBtYXJnaW4tbGVmdDogMDsgfVxyXG59XHJcblxyXG4lYXJyb3ctYnV0dG9uIHtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgdG9wOiBjYWxjKDUwJSAtIDMwcHgpO1xyXG4gICAgd2lkdGg6IDQ0cHg7XHJcbiAgICBoZWlnaHQ6IDYwcHg7XHJcbn1cclxuXHJcbi5iYWd1ZXR0ZUJveC1idXR0b24ge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNSU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzIzMjMyO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg1MCw1MCw1MCwuNSk7XHJcbiAgICBjb2xvcjogI2RkZDtcclxuICAgIGZvbnQ6IDEuNmVtIHNhbnMtc2VyaWY7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIC40cyBlYXNlO1xyXG5cclxuICAgICY6Zm9jdXMsXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDUwLDUwLDUwLC45KTtcclxuICAgIH1cclxuXHJcbiAgICAmI25leHQtYnV0dG9uIHtcclxuICAgICAgICBAZXh0ZW5kICVhcnJvdy1idXR0b247XHJcbiAgICAgICAgcmlnaHQ6IDIlO1xyXG4gICAgfVxyXG5cclxuICAgICYjcHJldmlvdXMtYnV0dG9uIHtcclxuICAgICAgICBAZXh0ZW5kICVhcnJvdy1idXR0b247XHJcbiAgICAgICAgbGVmdDogMiU7XHJcbiAgICB9XHJcblxyXG4gICAgJiNjbG9zZS1idXR0b24ge1xyXG4gICAgICAgIHRvcDogMjBweDtcclxuICAgICAgICByaWdodDogMiU7XHJcbiAgICAgICAgcmlnaHQ6IGNhbGMoMiUgKyA2cHgpO1xyXG4gICAgICAgIHdpZHRoOiAzMHB4O1xyXG4gICAgICAgIGhlaWdodDogMzBweDtcclxuICAgIH1cclxuXHJcbiAgICAvLyBGaXJlZm94IGZpeFxyXG4gICAgc3ZnIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qXHJcbiAgICBQcmVsb2FkZXJcclxuICAgIEJvcnJvd2VkIGZyb20gaHR0cDovL3RvYmlhc2FobGluLmNvbS9zcGlua2l0L1xyXG4qL1xyXG5cclxuLmJhZ3VldHRlQm94LXNwaW5uZXIge1xyXG4gICAgd2lkdGg6IDQwcHg7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIG1hcmdpbi10b3A6IC0yMHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IC0yMHB4O1xyXG59XHJcblxyXG4uYmFndWV0dGVCb3gtZG91YmxlLWJvdW5jZTEsXHJcbi5iYWd1ZXR0ZUJveC1kb3VibGUtYm91bmNlMiB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBvcGFjaXR5OiAuNjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBhbmltYXRpb246IGJvdW5jZSAycyBpbmZpbml0ZSBlYXNlLWluLW91dDtcclxufVxyXG5cclxuLmJhZ3VldHRlQm94LWRvdWJsZS1ib3VuY2UyIHtcclxuICAgIGFuaW1hdGlvbi1kZWxheTogLTFzO1xyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGJvdW5jZSB7XHJcbiAgICAwJSwgMTAwJSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcclxuICAgIH0gNTAlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xyXG4gICAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUtBQSxPQUFPLENBQVAsbUNBQU87QUhDUCxBQUFBLElBQUksQ0FBQztFQUFDLE1BQU0sRUFBRSxJQUFJO0VBQUcsVUFBVSxFQUFFLElBQUksR0FBSTs7QUFDekMsQUFBQSxJQUFJLENBQUM7RUFDSCxNQUFNLEVBQUUsSUFBSTtFQUNaLE1BQU0sRUFBRSxDQUFDO0VBQ1YsT0FBTyxFQUFFLENBQUM7RUFDVCxXQUFXLEVBQUUsc0RBQXNEO0VBQ25FLFNBQVMsRUFBRSxJQUFJO0VBQ2Ysc0JBQXNCLEVBQUUsV0FBVztFQUNuQyxXQUFXLEVBQUUsR0FBRztFQUNoQixLQUFLLEVEUk0sT0FBTztFQ1NsQixnQkFBZ0IsRURKVixPQUFPLEdDS2Q7O0FBRUQsQUFBQSxJQUFJLENBQUM7RUFDSCxPQUFPLEVBQUUsSUFBSTtFQUNiLGNBQWMsRUFBRSxNQUFNO0VBQ3RCLGVBQWUsRUFBRSxVQUFVO0VBQzNCLFdBQVcsRUFBRSxPQUFPO0VBQ3BCLGFBQWEsRUFBRSxPQUFPO0VBQ3RCLEtBQUssRUFBRSxJQUFJO0VBQ1gsU0FBUyxFQUFFLEtBQUs7RUFDaEIsU0FBUyxFQUFFLEtBQUs7RUFDaEIsTUFBTSxFQUFFLElBQUk7RUFDWixNQUFNLEVBQUUsTUFBTSxHQTBGZjtFQXBHRCxBQWFFLElBYkUsQ0FhRixPQUFPLENBQUM7SUFDTixJQUFJLEVBQUUsUUFBUTtJQUNkLGdCQUFnQixFRHRCWixPQUFPO0lDdUJYLFVBQVUsRUFBRSxNQUFNO0lBQ2xCLE9BQU8sRUFBRSxhQUFhO0lBQ3RCLFVBQVUsRUFBRSxRQUFRLEdBNkJyQjtJQS9DSCxBQW9C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 */